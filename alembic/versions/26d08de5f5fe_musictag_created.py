"""MusicTag created

Revision ID: 26d08de5f5fe
Revises: 55a4eeecf6ee
Create Date: 2020-11-11 02:38:02.649155

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "26d08de5f5fe"
down_revision = "55a4eeecf6ee"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "music_tag",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("fk_music_tag_user_id_users"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_music_tag")),
    )
    op.add_column("music", sa.Column("album", sa.String(), nullable=True))
    op.add_column("music", sa.Column("tag_id", sa.Integer(), nullable=True))
    op.create_foreign_key(
        op.f("fk_music_tag_id_music_tag"),
        "music",
        "music_tag",
        ["tag_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_unique_constraint(op.f("uq_users_email"), "users", ["email"])
    op.drop_constraint("users_email_key", "users", type_="unique")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint("users_email_key", "users", ["email"])
    op.drop_constraint(op.f("uq_users_email"), "users", type_="unique")
    op.drop_constraint(op.f("fk_music_tag_id_music_tag"), "music", type_="foreignkey")
    op.drop_column("music", "tag_id")
    op.drop_column("music", "album")
    op.drop_table("music_tag")
    # ### end Alembic commands ###
